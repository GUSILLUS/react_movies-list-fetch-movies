{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","getMovieFromData","Title","Plot","Poster","imdbID","FindMovie","setQuery","newMovie","setNewMovie","onAddMovie","useState","hasError","setHasError","search","setSearch","handleSubmit","event","a","preventDefault","response","Promise","reject","parsedMovie","useEffect","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","checkHasSuchMovie","useCallback","some","addMovie","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e57f891.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ab484a41';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\nexport const getMovieFromData = ({\n  Title,\n  Plot,\n  Poster,\n  imdbID,\n}: MovieData) => ({\n  title: Title,\n  description: Plot,\n  imgUrl: Poster === 'N/A'\n    ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n    : Poster,\n  imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n  imdbId: imdbID,\n});\n","import {\n  ChangeEvent,\n  Dispatch,\n  FormEvent,\n  SetStateAction,\n  useEffect,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie, getMovieFromData } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  query: string;\n  setQuery: Dispatch<SetStateAction<string>>;\n  newMovie: Movie | null;\n  setNewMovie: Dispatch<SetStateAction<Movie | null>>;\n  onAddMovie: () => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  query,\n  setQuery,\n  newMovie,\n  setNewMovie,\n  onAddMovie,\n}) => {\n  const [hasError, setHasError] = useState(false);\n  const [search, setSearch] = useState(false);\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasError(false);\n    setSearch(true);\n\n    getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          return Promise.reject();\n        }\n\n        const parsedMovie = getMovieFromData(response);\n\n        return setNewMovie(parsedMovie);\n      })\n      .catch(() => setHasError(true));\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setHasError(false);\n\n    setQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    setSearch(false);\n  }, [newMovie, query]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': search && !hasError },\n                { 'is-danger': hasError },\n              )}\n              disabled={!query}\n            >\n              {!newMovie\n                ? 'Find a movie'\n                : 'Search Again'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {newMovie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={onAddMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const checkHasSuchMovie = useCallback(({ title }: Movie) => (\n    movies.some(movie => movie.title === title)\n  ), [movies]);\n\n  const addMovie = useCallback(() => {\n    if (newMovie && !checkHasSuchMovie(newMovie)) {\n      setMovies((current => [...current, newMovie]));\n    }\n\n    setNewMovie(null);\n    setQuery('');\n  }, [movies, newMovie]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          query={query}\n          setQuery={setQuery}\n          newMovie={newMovie}\n          setNewMovie={setNewMovie}\n          onAddMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}